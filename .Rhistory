gsub("+", "*", gsub("|","*",sprintf("%s", paste(ampma, collapse="+|")), fixed=T), fixed=T)
gsub("+", "*", gsub("|","*",sprintf("%s", paste(ampm, collapse="+|")), fixed=T), fixed=T)
gsub("+", "*", gsub(">", "*", sprintf("%s", paste(ampm, collapse="+>"))), fixed=T)
gsub("+", "*", gsub(">", "*", sprintf("%s", paste(ampm, collapse="+>"))),fixed=T)
ampm <-format(as.POSIXct(c("1970-01-01 01:00:00 UTC", "1970-02-02 22:00:00 UTC")), format="%p")
p <- unique(ampm)
p <- p[nzchar(p)]
alpha_p <- sprintf ("(?<p>%s)(?![[:alpha:]])", paste(p, collapse="|"))
num <- c(
d = "(?<d>[012]?[1-9]|3[01]|[12]0)",
H = "(?<H>2[0-4]|[01]?\\d)",
h = "(?<H>2[0-4]|[01]?\\d)",
I = "(?<I>1[0-2]|0?[1-9])",
j = "(?<j>[0-3]?\\d?\\d)",
M = "(?<M>[0-5]?\\d)",
S = "((?<OS_S>[0-5]?\\d\\.\\d+)|(?<S>[0-6]?\\d))",
s = "((?<OS_S>[0-5]?\\d\\.\\d+)|(?<S>[0-6]?\\d))",
U = "(?<U>[0-5]?\\d)",
w = "(?<w>[0-6])",
u = "(?<u>[1-7])",
W = "(?<W>[0-5]?\\d)",
Y = "(?<Y>\\d{4})",
y = "((?<Y_y>\\d{4})|(?<y>\\d{2}))",
Oz = "(?<Oz_Oz>[-+]\\d{4})",
OO = "(?<OO>[-+]\\d{2}:\\d{2})",
Oo = "(?<Oo>[-+]\\d{2})")
)
num <- c(
d = "(?<d>[012]?[1-9]|3[01]|[12]0)",
H = "(?<H>2[0-4]|[01]?\\d)",
h = "(?<H>2[0-4]|[01]?\\d)",
I = "(?<I>1[0-2]|0?[1-9])",
j = "(?<j>[0-3]?\\d?\\d)",
M = "(?<M>[0-5]?\\d)",
S = "((?<OS_S>[0-5]?\\d\\.\\d+)|(?<S>[0-6]?\\d))",
s = "((?<OS_S>[0-5]?\\d\\.\\d+)|(?<S>[0-6]?\\d))",
U = "(?<U>[0-5]?\\d)",
w = "(?<w>[0-6])",
u = "(?<u>[1-7])",
W = "(?<W>[0-5]?\\d)",
Y = "(?<Y>\\d{4})",
y = "((?<Y_y>\\d{4})|(?<y>\\d{2}))",
Oz = "(?<Oz_Oz>[-+]\\d{4})",
OO = "(?<OO>[-+]\\d{2}:\\d{2})",
Oo = "(?<Oo>[-+]\\d{2})")
check <- sprintf("((%s\\D+%s\\D*%s)|(%s\\D+%s\\D+%s))", num[["I"]], num[["M"]], num[["S"]], alpha_p, num[["H"]], num[["M"]], num[["S"]])
check <- gsub("(<[IMSpHS]|<OS)", "\\1_s", check)
gsub("(?<!\\()\\?(?!<)","",perl=T,
gsub("+", "*", fixed=T,
gsub(">", "_e>", check)))
ymd()
.date_template <- lubridate:::.date_template
lubridate:::.build_locale_regs()
lubridate:::.build_locale_regs(ymd)
lubridate:::.build_locale_regs(lacale)
ampm <- format(as.POSIXct(c("1970-01-01 01:00:00 UTC", "1970-02-02 22:00:00 UTC")), format = "%p")
gsub("+", "", gsub(">", "", sprintf("%s", paste(ampm, collapse = "+>"))), fixed = T)
Error in gsub("+", "", gsub(">", "", sprintf("%s", paste(ampm, collapse = "+>"))), :
invalid multibyte string at ' < 8 c > '
gsub("+", "", gsub(">", "", sprintf("%s", paste(ampm, collapse = "+>"))), fixed = T)
Error in gsub("+", "", gsub(">", "", sprintf("%s", paste(ampm, collapse = "+>"))), :
invalid multibyte string at ' < 8 c > '
gsub("+", "", gsub(">", "", sprintf("%s", paste(ampm, collapse = "+>"))), fixed = T)
gsub("+", "", gsub(">", "", sprintf("%s", paste(ampm, collapse = "+>"))), fixed = T)
Error in gsub("+", "", gsub(">", "", sprintf("%s", paste(ampm, collapse = "+>"))), :
invalid multibyte string at ' < 8 c > '
gsub("+", "*", gsub(">", "*", paste(ampm, collapse = "+>"), fixed = T), fixed = T)
gsub("+", "*", gsub(">", "*", paste(ampm, collapse = "+>")), fixed = T)
gsub("+", "*", gsub(">", "*", paste(ampm, collapse = "+>")), fixed = T)
gsub("+", "*", gsub(">", "*", paste(ampm, collapse = "+>")), fixed = T)
invalid multibyte string at '< 8 c >'
gsub with fixed=TRUE (fix #181)
library(devtools)
library(devtools)
install_github("lubridate", "vitoshka")
0
ymd
ymd(20120202)
gsub("+", "*", gsub(">", "*", paste(ampm, collapse = "+>"), perl = T), fixed = T)
ampm
month()
month()
x<-month()
0
stop()
q()
library(lubridate)
customers <-c("cost1", "cost2")
checkin <- ymd(c("2013-01-10", "2013-01-13"))
df1
df
library(lubridate)
ymd("2010-01-01")
Sys.setlocale("LC_TIME", "usa")
ymd("2010-01-01")
ymd("20100101")
x<-c(20090101,"20090102", "2009 01 03")
x<-c(20090101,"20090102", "2009 01 03", "2009-1-4" )
x<-c(20090101,"20090102", "2009 01 03", "2009-1-4" , "2009-1, 5", "created on 2009 1 6")
x
ymd(x)
wday(x)
wday[ymd(x)]
wday(ymd(x))
tz(x)
tree <- ymd("2013-04-05")
year(tree)
month(tree)
month(tree, label=T)
week(tree)
yday(tree)
mday(tree)
wday(ymd(x), label=)
wday(ymd(x), label=T)
weekdays(tree)
quaters(tree)
quarters(tree)
quarter(tree)
customers <- c("cust1", "cust2")
checkin <- ymd("2015-01-01", "2015-01-13")
checkout <- ymd("2015-01-23", "2015-01-16")
hotel <- data.frame (customers, checkin, checkout)
hotel
str(hotel)
is.instant(hotel$checkin)
is.instant(hotel$checkout)
hotel$stay1 <- interval (hotel$checkin, hotel$checkout)
hotel$stay2 <- hoter$checkin %--% hotel$checkout
hotel$stay2 <- hotel$checkin %--% hotel$checkout
class(hotel$stay1)
class(hotel$stay2)
hotel
stay1
int_start(hotel$stay1)
int_end(hotel$stay2)
intersect(hotel$stay1[1], hotel$stay2[2])
int_overlaps(hotel$stay1[1],hotel$stay2[2])
as.duration(hotel$stay1)
hotel$stay1/dday(1)
hotel$stay1/ddays(1)
leap_year(2015)
leap_year(2014)
leap_year(2013)
leap_year(2012)
ymd("20120101") +dyears(1)
ymd("20130101")+dyears(1)
as.period(hotel$stay1)
ymd("20120131") %m+% months(1)
ymd("20120131") %m-% months(1)
library(reshape2)
help("melt")
name <- c("pat1", "pat2", "pat3")
bp0 <- c("135", "150","160")
bp1 <- c("130", "140", "130")
bp3 <- c("130", "135", "")
bp6 <- c("120", "110", "125")
pulse0 <- c("98","78","65")
pulse1 <- c("77","55", "87")
pulse3 <- c("50","64", "")
pulse6 <- c("52", "77","88")
widedf <- data.frame(name, bp0, bp1, bp3, bp6, pulse0, pulse1, pulse3, pulse6)
widedf
mdf <- melt(widedf, id="names")
mdf <- melt(widedf, id="name")
pulse3 <- c("50","64", "NA")
bp3 <- c("130", "135", "NA")
widedf
widedf <- data.frame(name, bp0, bp1, bp3, bp6, pulse0, pulse1, pulse3, pulse6)
widedf
mdf <- melt(widedf, id="name")
mdf <- melt(widedf, id="name", na.rm=FALSE)
mdf <- melt(widedf, id="name", na.rm=FALSE, value.name = "melt_widedf")
install.packages("reshape")
library(reshape)
mdf <- melt(widedf, id="name")
mdf
mdf <- melt(widedf, id="name", value.name ="measurements")
mdf
library(stringr)
mdf$followup <- str_sub(mdf$variable, -1)
mdf$newvar <- str_sub(mdf$variable, 1, -2)
mdf
help("str_sub")
hw <- "Hadley Wickham"
str_sub(hw, 1,6)
str_sub(hw, end=6)
str_sub(hw, 8,14)
str_sub(hw, 8)
str_sub(hw, c(1,8), c(6,14))
str_sub(hw, c(1,6), c(8,14))
str_sub(hw, -1
)
str_sub(hw, 1,-2)
str_sub(hw, 1,-1)
str_sub(hw, 1,-6)
str_sub(hw, 1,-8)
str_sub(hw, 1,-7)
str_sub(hw, 1,-9)
mdf
cdf <- cast(mdf, name+followup ~ newvar)
cdf
mdf1 <- melt(cdf, id=c("name", "followup"))
mdf1
mdf2 <- cast(mdf1, name~newvar + followup)
mdf2
df2
mdf2
treat <- c("no", "yes", "yes")
mdf2 <- cbind(mdf2, treat)
mdf2
mdf3 <-melt (mdf2, id=c("name", "treat"))
mdf3
colsplit(mdf3$variable, split="_", names=c("newvar", "followup"))
mdf3
sp <- colsplint (mdf3$variable, split="_", names=c("newvar", "followup"))
sp <- colsplit (mdf3$variable, split="_", names=c("newvar", "followup"))
sp
mdf3 <- cbind(mdf3, sp)
mdf3
head(mdf3)
dim(dmf3)
dim(mdf3)
cdf <- cast(mdf3, treat+followup ~ newvar)
cdf
mdf4<-cast(mdf3, treat+followup~newvar)
mdf4
mdf3
mmdf
mdf4
mdf4 <- cast(mdf3, treat+followup~newvar, mean)
mdf4
mdf3
mdf5<-cast(mdf3, treat+followup~newvar, mean)
warnings()
mmdf
mdf3
mdf4<-cast(mdf3, treat+followup~newvar, mean(x, na.rm=T))
mdf3
mdf3[4,9]
mdf3[4,10]
mdf3[1,1]
mdf3[4,1]
mdf3[9,4]
mdf3[9,4] <- ""
mdf3[9,4] <- NA
mdf3
mdf3[21,4]
mdf3[21,4] <- NA
mdf3
mdf4<-cast(mdf3, treat+followup~newvar, mean(x, na.rm=T))
mdf4<-cast(mdf3, treat+followup~newvar, mean
)
mdf4
names<-c("patient1", "patient2", "patient3")
bp0 <-c(135,150,140)
bp1 <- c(130,140,130)
bp3 <- c(130,135,)
bp6 <- c(120,110,125)
pulse0 <- c(98,78,65)
pulse1 <- c(87,66,87)
pulse3 <- c(50,65,)
pulse6 <- c(52,77,88)
mdf <- data.frame(names, bp0,bp1, bp3, bp6, pulse0, pulse1, pulse3, pulse6)
mdf
mdf1 <- melt (mdf, id="names")
mdf1
mdf1$followup <- str_sub(mdf1$variable,-1)
mdf1$newvar <- str_sub(mdf1$variable, 1,-2)
mdf1
mdf2 <- cast(mdf1, names+followup~newvar)
mdf2
mdf3 <- melt(mdf2, id=c("names", "followup"))
mdf3
mdf4 <- cast (mdf3, names~newvar+followup)
mdf4
treat <- c("no", "yes" ,"yes")
mdf4 <- cbind (mdf4, treat)
mdf4
mdf5 <- melt (mdf4, id=c("name", "treat"))
mdf5
head(mdf5)
mdf5 <- melt (mdf4, id=c("names", "treat"))
mdf5
sp <- colsplit(mdf5$variable, split="_", names=c("newvar", "followup"))
sp
mdf5 <- cbind(mdf5, sp)
mdf5
mdf6 <- cast(mdf5, treat+followup~newvar)
mdf6
mdf6 <- cast(mdf5, treat+followup~newvar, mean)
mdf6
mdf6 <- cast(mdf5, treat+followup~newvar, mean(x, na.rm=T))
mdf6
mdf6 <- cast(mdf5, treat+followup~newvar, mean, na.rm=T)
mdf6
mdf6
mdf6 <-cast (mdf5, treat+followup~newvar)
mdf6
mdf7 <- cast(mdf5, treat+followup~newvar, mean, na.rm=TRUE)
mfd7
mdf7
mmdf
mdf5
mdf5[9,4]
mdf5[9,4] +1
class(mdf5[9,4])
dim(mdf5[9,4])
dim(mdf5)
cast(mdf5, treat+followup~newvar, range)
cast(mdf5, treat+followup~newvar)
names<-c("patient1", "patient2", "patient3")
bp0 <-c(135,150,140)
bp1 <- c(130,140,130)
bp3 <- c(130,135,140)
bp6 <- c(120,110,125)
pulse0 <- c(98,78,65)
pulse1 <- c(87,66,87)
pulse3 <- c(50,65,70)
pulse6 <- c(52,77,88)
mdf <- data.frame(names, bp0,bp1, bp3, bp6, pulse0, pulse1, pulse3, pulse6)
mdf
mdf1 <- melt (mdf, id="names")
library(reshape)
mdf1<-melt(mdf, id="names")
library(stringr)
mdf1$followup <- str_sub(mdf1$variable, -1)
mdf1$newvar <- str_sub(mdf1$variale, 1, -2)
mdf1$newvar <- str_sub(mdf1$variable, 1, -2)
mdf1
mdf2<-cast(mdf1, namea+followup~newvar, mean)
mdf2<-cast(mdf1, names+followup~newvar, mean)
mdf2
mdf3 <- melt(mdf2, id=c("names", "followup"))
mdf3
mdf4<- cast(mdf3, names~newvar+followup)
mdf4
treat <- c("no","yes","yes")
mdf4 <- cbind (mdf4, treat)
mdf4
mdf5 <- melt (mdf4, id=c("name", "treat"))
mdf5 <- melt (mdf4, id=c("names", "treat"))
mdf5
sp<- colsplit(mdf5$variable, split="_", names=c("newvar", "followup"))
mdf5 <- cbind (mdf5, sp)
mdf5
mdf6 <- cast(mdf5, treat+followup~newvar)
mdf6
mdf7 <- cast(mdf5, treat+followup~newvar, mean, na.rm=T)
mdf7
mdf8 <- cast(mdf5, treat+followup~newvar, range)
mdf8
mdf9 <- cast(mdf5, treat+followup~newvar, c(min, max))
mdf9
help("cast")
library(plyr)
iris
iris[c(1,2,3),]
iris[iris$Sepal.Length>4,]
iris[iris$Sepal.Length<4,]
iris[iris$Sepal.Length>4,]
iris[iris$Sepal.Length>5,]
iris[iris$Sepal.Length>4, "Species"]
seto <-subset(iris, Species=="setosa")
head(seto,3)
head(seto)
seto
head(seto,3)
versi <- subset(iris, Species=="versicolor")
head(versi, 3)
seto2 <- subset(iris, Species=="setosa", select = 1:2)
head(seto2, 3)
versi2 <- subset(iris, Species =="versicolor", select = 2:3)
head(versi2,3)
head(iris)
subiris <- iris [, -5]
rel1 <- apply (subiris, 2, mean)
rel1
rel2 <- apply (subiris, 1, mean)
rel2
head(rel2, 3)
rel3 <- sapply(subiris, mean)
rel3
rel3 <- sapply(subiris, mean, trim=0.5)
rel3
help("sapply")
tapply(iris$Sepal.Length, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean, trim=0.5)
library(plyr)
str(iris)
ddply(iris, .(Species), nrow)
ddply(iris, .(Species), dim)
ddply(iris, .(Species), c(nrow, ncol()))
ddply(iris, .(Species), c(nrow, ncol)
)
dim(iris)
ddply(iris, .(Species), function(df){mean(df$Spetal.Length)})
df$Septal.Length
df
x
y
baseball
dim(baseball)
summarise(baseball, duration = max(year) - min(year), nteams = length(unique(team)))
ddply(iris, .(Species), summarise, meanSW=mean(Septal.Width))
ddply(iris, .(Species), summarise, meanSW=mean(Septal.Width))
head(iris)
ddply(iris, .(Species), summarise, meanSW=mean(Sepal.Width))
ddply(iris, .(Species), summarise, meanSW=mean(Sepal.Width), trim=0.5)
ddply(iris, .(Species), summarise, meanSW=mean((Sepal.Width), trim=0.5))
ddply(iris, .(Species), summarise, meanSW=mean((Sepal.Width), trim=0.05))
ddply(iris, .(Species), summarise, meanSW=mean((Sepal.Width), trim=0.5))
ddply(iris, .(Species), summarise, meanSW=mean(Sepal.Width), meanSL=mean(Sepal.Length))
ddply(iris, .(Species), summarise, meanSW=mean(Sepal.Width), sdSW=sd(Sepal.Width), meanSL=mean(Sepal.Length), sdSL=sd(Sepal.Length))
colwise(mean, is.numeric)(iris)
colwise(mean, 0(Sepal.Width, Sepal.Length, Petal.Width))(iris)
colwise(mean, .(Sepal.Width, Sepal.Length, Petal.Width))(iris)
colwise(mean, c("Sepal.Width", "Sepal.Length", "Petal.Width"))(iris)
ddply(iris, .(Species), colwise(mean, is.numeric))
library(ggplot2)
str(diamonds)
head(diamonds,3)
ddply(diamonds, .(cut), summarise, meanPrice=mean(price) )
ddply(diamonds, .(cut), summarise, meanPrice=(mean(price), trim=0.5) )
ddply(diamonds, .(cut), summarise, meanPrice=mean(price, trim=0.5) )
ddply(diamonds, .(cut), summarise, meanPrice=mean(price, trim=0) )
ddply(diamonds, .(cut), summarise, meanPrice=mean(price, trim=0.1) )
help(trim)
trim=0.5
trim
ddply(diamonds, .(cut, color), summarise, meanPrice=mean(price, trim=0.1) )
ddply(diamonds, .(cut, color), summarise, meanPrice=mean(price, trim=0.5) )
student
student
studentName <- c("jack", "sam", "john", "sally", "jay")
studentId <- 111:115
student <- data.frame(studentName, studentId)
gradeA <- c("a", "a", "b")
subjectA <- data.frame(studentId=c(111,113,115), gradeA)
gradeB <- c("a", "c","a","d")
subjectB <- data.frame(studentId=c(111,112,114,115), gradeB)
subjectA
subjectB
student
join(student, subjectA, type="left")
join(subjectA, student, type="left")
join(subjectA, student, type="right")
join(subjectA, subjectB, type="inner")
join(subjectA, subjectB, type="full")
df1 <- join(student, subjectA, type="left")
df <- join(df1, subjectB, type="left")
df
df2<- join(student, subjectA, subjectB, type="left")
st <- join(subjectA, student, by="studentId", type="left")
st
library(dplyr)
library(ggplot2)
diamonds_df <- tbl_df(diamonds)
diamonds_df
as.data.frame(diamonds_df)
diamonds_df
filter(diamonds_df, cut == "Premium", color == "E")
filter(diamonds_df, cut == "Premium" | color == "E")
select(diamonds_df, cut, clasrity)
select(diamonds_df, cut, clarity)
select (diamonds_df, cut, x:y)
select (diamonds_df, cut, x:z)
select(diamonds_df, -(4:7))
diamonds_df
select(diamonds_df, c(cut, clarity, price, y,z))
select(diamonds_df, c(1,3,5,7))
arrange(diamonds_df, price, carat)
arrange(diamonds_df, c(price, carat)
)
arrange(diamonds_df, c(price, carat))
arrange(diamonds_df, c("price", "carat"))
arrange(diamonds_df, desc(price), "carat)
arrange(diamonds_df, desc(price), "carat)
arrange(diamonds_df, desc(price), carat)
mutate(diamonds_df, d=x+y+z)
summarise(diamonds_df, xMean=mean(x), yMean=mean(y))
library(plyr)
ddply(diamonds, .(cut), summarise, priceMean=mean(price))
df <- group_by(diamonds_df, cut)
df
summarise(df, meanPrice = mean (price, na.rm=T))
summarise(df, N=n(), meanPrice = mean (price, na.rm=T))
summarise(df, N=n_distinct(price), meanPrice = mean (price, na.rm=T))
tmp <- filter(diamonds_df, carat >= 1, carat <1.5)
tmp <- group_by(tmp, carat)
tmp <- group_by(tmp, color)
tmp <- summarise(tmp, meanPrice=mean(price, trim=0.5))
result <- arrange(tmp, desc(meanPrice))
result
diamonds_df %.%
filter(diamonds_df, carat >=1, carat<1.5)
diamonds_df %.%
filter(diamonds_df, carat >=1, carat<1.5) %.%
group_by(color) %.%
summarise ()
diamonds_df %.%
filter (carat>=1, carat<1.5)
diamonds_df %.%
filter (carat>=1, carat<1.5) %.%
group_by(color) %.%
summarise (meanPrice=mean(price, trim=0.5)) %.%
arrange (desc(meanPrice))
help("Deprecated")
diamonds_df %>%
filter (carat>=1, carat<1.5) %>%
group_by(color) %>%
summarise (meanPrice=mean(price, trim=0.5)) %>%
arrange (desc(meanPrice))
